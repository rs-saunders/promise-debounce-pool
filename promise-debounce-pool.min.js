!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).PromisePool=e()}}(function(){function e(){this.promise={},this.resolver={}}return e.prototype.isSet=function(e){return void 0!==this.resolver[e]},e.prototype.set=function(e,i){this.resolver[e]=i},e.prototype.get=function(e){function i(){var i=t.resolver[e];return"function"!=typeof i?Promise.reject(new TypeError("Promise resolver "+i+" is not a function for key "+e)):r>1&&"function"!=typeof(i=o(i))?Promise.reject(new TypeError("Curried promise resolver "+i+" is not a function for key "+e)):new Promise(i).then(function(i){return delete t.promise[e],delete t.pending,i},function(i){throw delete t.promise[e],delete t.pending,i})}function o(e){for(var i=[],o=1;o<r;o++)i.push(n[o]);return e.apply(null,i)}var t=this,n=arguments,r=n.length;return this.promise[e]?this.promise[e]:this.pending?(this.promise[e]=this.pending.then(i,i),this.pending=this.promise[e],this.promise[e]):(this.promise[e]=i(),this.pending=this.promise[e],this.promise[e])},e});